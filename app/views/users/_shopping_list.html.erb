<% current_list = ShoppingList.find(session[:current_list_id]) %>
<%= button_to "Delete List", shopping_list_path(current_list.id), method: :delete, data: { confirm: "Are you sure you want to permamently delete this list?" }, class: "btn btn-danger" %>

 <ol>
  <!-- form for changing title -->
  <%= simple_form_for(current_list, remote: true) do |f| %>
    <%= f.input :title, wrapper_html: { class: "shopping-list-title" } %>
    <%= f.button :submit, "Update title", class: "btn btn-primary" %>
  <% end %>

  <div id="total-list-price">
    <h4>
      <%= "Total list price: #{format_price(total_list_price(session[:current_list_id]))}" %>
    </h4>
  </div>

  <!-- lists products -->
  <% current_list.user_products.each do |user_prod| %>
    <li class="shopping-list-item">
      <%= user_prod.product.name %>

      <!-- form to change item quantity -->
      <%= simple_form_for(user_prod, remote: true) do |f| %>
        <%= f.input :quantity, wrapper_html: { class: "change-user-product-quantity" } %>
      <% end %>

      <!-- displays price of one and price for selected quantity -->
      <% if user_prod.store_product %>
        <%= "@ #{format_price(user_prod.store_product.price)}/qty" %>
        <p>
          <%= "Total price: #{format_price(user_prod.store_product.price * user_prod.quantity)}" %>
        </p>
      <% end %>

      <!-- form to change store for item -->
      <%= simple_form_for(user_prod, remote: true) do |f| %>
        <%= f.association :store_product,
          collection: StoreProduct.where(product_id: user_prod.product_id),
          label_method: Proc.new { |store_product| location_and_price(store_product) },
          wrapper_html: { class: "choose-user-product-store" } %>
      <% end %>
    </li>
  <% end %>
</ol>

<script>
  // to update total price with ajax when stores/quantity change
  // $(function() {
  //   $(".shopping-list-item").on("ajax:success", function(event, data) {
  //     $(".total_list_price").empty();
  //     $(".total-list-price").append();
  //   });
  // })
</script>